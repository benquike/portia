FROM ubuntu:22.04 as portia_dev
# WORKDIR /app/slyd

ARG UID
ARG GID
ARG USERNAME

# ENV PATH="/opt/qt59/5.9.1/gcc_64/bin:${PATH}"
# ENV DEBIAN_FRONTEND=noninteractive
# ENV QT_MIRROR http://ftp.fau.de/qtproject/official_releases/qt/5.9/5.9.1/qt-opensource-linux-x64-5.9.1.run
# ENV QT_MIRROR https://master.qt.io/new_archive/qt/5.9/5.9.1/qt-opensource-linux-x64-5.9.1.run

RUN apt-get update
RUN apt-get install -y --no-install-recommends \
    curl \
    software-properties-common \
    apt-transport-https \
    python3-software-properties \
    ca-certificates

RUN apt-get install --no-install-recommends -y \
    fonts-liberation \
    ttf-wqy-zenhei \
    fonts-arphic-gbsn00lp \
    fonts-arphic-bsmi00lp \
    fonts-arphic-gkai00mp \
    fonts-arphic-bkai00mp \
    fonts-beng && \
    echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections && \
    apt-get install --no-install-recommends -y ttf-mscorefonts-installer

RUN apt-get install -y \
    pkg-config \
    netbase \
    build-essential \
    nginx \
    zsh \
    emacs \
    vim \
    iputils-ping \
    ripgrep \
    git \
    jq

RUN apt-get install -y --no-install-recommends \
    python3.10 \
    python3.10-dev \
    libmysqlclient-dev \
    python3-mysql.connector \
    python3-numpy \
    python3-openssl \
    python3-pip \
    python3-setuptools \
    python3-wheel   \
    python3-venv \
    python3-numpy

RUN apt-get install -y liblzma-dev \
    libncursesw5-dev \
    libsqlite3-dev \
    libreadline-dev \
    libbz2-dev \
    libffi-dev \
    libssl-dev \
    libgdbm-dev \
    zlib1g-dev \
    libjpeg-dev \
    libtiff-dev \
    libpq-dev \
    libxml2-dev \
    libxslt1-dev \
    libsdl2-dev \
    libgstreamer-plugins-base1.0-dev \
    libnotify-dev \
    freeglut3-dev \
    libsm-dev \
    libgtk-3-dev \
    libwebkitgtk-6.0-dev \
    libxtst-dev

# this is required for dev and build
# libre2 is required at runtime
RUN apt-get install -y libre2-dev

RUN apt-get install -y --no-install-recommends \
    liblua5.4-dev \
    zlib1g \
    zlib1g-dev

#TODO: is these dependencies required at runtime?
RUN apt install -y --no-install-recommends \
    qtcreator qtbase5-dev qt5-qmake \
    libqt5webkit5-dev \
    python3-pyqt5.qtsvg python3-pyqt5.qtwebkit

RUN groupadd --gid $GID ${USERNAME} && \
    useradd --uid $UID --gid $GID --create-home --shell /usr/bin/zsh ${USERNAME}

USER ${USERNAME}
# all the following commands to be on the host
# RUN curl https://pyenv.run | bash

# RUN echo 'export PYENV_ROOT="$HOME/.pyenv"' >> $HOME/.bashrc
# RUN echo '[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"' >> $HOME/.bashrc
# RUN echo 'eval "$(pyenv init -)"' >> $HOME/.bashrc

# ENV HOME  /root
# ENV PYENV_ROOT $HOME/.pyenv
# ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH


# RUN pyenv install 3.7.17
# RUN pyenv global 3.7.17

# RUN pyenv install 3.9.21
# RUN pyenv global 3.9.21


# RUN pip install git+https://github.com/sunu/pyre2
RUN pip install git+https://github.com/facebook/pyre2

RUN pip install setuptools six && \
    pip install \
        qt5reactor \
        psutil \
        Twisted \
        adblockparser \
        xvfbwrapper \
        funcparserlib \
        Pillow \
        lupa \
        PyQt5-sip

COPY docker/portia.conf /app/portia.conf
COPY docker/qt_install.qs /app/script.qs
COPY docker/provision.sh /app/provision.sh

RUN pip install git+https://github.com/benquike/scrapely
RUN pip install git+https://github.com/benquike/scrapy-splash.git

RUN pip install git+https://github.com/benquike/portia2code

# ADD . /app

# COPY slybot/requirements.txt /app/slybot/requirements.txt
# COPY slyd/requirements.txt /app/slyd/requirements.txt
# COPY portia_server/requirements.txt /app/portia_server/requirements.txt

COPY requirements.txt /app/requirements.txt
RUN pip install -r "/app/requirements.txt"

# RUN pip install -r "/app/slyd/requirements.txt"
# RUN pip install -r "/app/portia_server/requirements.txt"

# RUN pip install -r "/app/slybot/requirements.txt"

RUN pip install -e /app/slyd
RUN pip install -e /app/slybot

ADD docker/nginx /etc/nginx

# RUN python3 /app/portia_server/manage.py migrate

# EXPOSE 9001
# ENTRYPOINT ["/app/docker/entry"]
